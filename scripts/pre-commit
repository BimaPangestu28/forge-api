#!/bin/bash

echo "Running pre-commit hooks..."

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

command_exists() {
    command -v "$1" >/dev/null 2>&1
}

check_requirements() {
    local missing_tools=()

    if ! command_exists go; then
        missing_tools+=("go")
    fi
    if ! command_exists gofmt; then
        missing_tools+=("gofmt")
    fi
    if ! command_exists golangci-lint; then
        missing_tools+=("golangci-lint")
    fi
    if ! command_exists goimports; then
        missing_tools+=("goimports")
    fi

    if [ ${#missing_tools[@]} -ne 0 ]; then
        echo -e "${RED}Error: Required tools are missing:${NC}"
        printf '%s\n' "${missing_tools[@]}"
        echo "Please install missing tools to proceed."
        exit 1
    fi
}

STAGED_GO_FILES=$(git diff --cached --name-only --diff-filter=d | grep "\.go$" || true)
if [ -z "$STAGED_GO_FILES" ]; then
    echo -e "${YELLOW}No Go files staged for commit.${NC}"
    exit 0
fi

check_requirements

ERROR=0

echo -e "${YELLOW}Running format check...${NC}"
for file in $STAGED_GO_FILES; do
    if [ -f "$file" ]; then
        gofmt -l -w "$file"
        if [ $? -ne 0 ]; then
            echo -e "${RED}gofmt failed for $file${NC}"
            ERROR=1
        fi
    fi
done

echo -e "${YELLOW}Running imports check...${NC}"
for file in $STAGED_GO_FILES; do
    if [ -f "$file" ]; then
        goimports -l -w "$file"
        if [ $? -ne 0 ]; then
            echo -e "${RED}goimports failed for $file${NC}"
            ERROR=1
        fi
    fi
done

echo -e "${YELLOW}Running golangci-lint...${NC}"
golangci-lint run --fix
if [ $? -ne 0 ]; then
    echo -e "${RED}golangci-lint check failed${NC}"
    ERROR=1
fi

echo -e "${YELLOW}Running tests...${NC}"
go test ./...
if [ $? -ne 0 ]; then
    echo -e "${RED}Tests failed${NC}"
    ERROR=1
fi

echo -e "${YELLOW}Checking for sensitive information...${NC}"
SENSITIVE_PATTERNS=(
    "password"
    "passwd"
    "secret"
    "apikey"
    "api_key"
    "token"
    "accesskey"
    "access_key"
    "aws_access_key"
    "aws_secret_key"
    "private_key"
)

for pattern in "${SENSITIVE_PATTERNS[@]}"; do
    git diff --cached --name-only | while read file; do
        if [ -f "$file" ]; then
            if [[ "$file" != *".env.example"* ]] && grep -i "$pattern" "$file" > /dev/null; then
                echo -e "${RED}Warning: Potential sensitive information ($pattern) found in $file${NC}"
                ERROR=1
            fi
        fi
    done
done

if [ $ERROR -ne 0 ]; then
    echo -e "${RED}Pre-commit checks failed. Please fix the errors and try again.${NC}"
    exit 1
fi

if [ -n "$STAGED_GO_FILES" ]; then
    git add $STAGED_GO_FILES
fi

echo -e "${GREEN}All pre-commit checks passed!${NC}"
exit 0